<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="open_base">

	<xacro:include filename="$(find omni_3wd)/urdf/rim.urdf.xacro"/>

	<!-- Visualization of LDS. If you want to see LDS, set to `True` -->
	<xacro:arg name="laser_visual" default="True"/>

	<!-- Macro Define -->
    	<xacro:property name="M_PI" value="3.14159"/>
   	<xacro:property name="wheel_radius" value="0.033"/>
    	<xacro:property name="wheel_length" value="0.017"/>
    	<xacro:property name="base_link_radius" value="0.13"/>
    	<xacro:property name="base_link_length" value="0.005"/>
    	<xacro:property name="motor_radius" value="0.02"/>
    	<xacro:property name="motor_length" value="0.08"/>
    	<xacro:property name="motor_x" value="-0.055"/>
    	<xacro:property name="motor_y" value="0.075"/>
    	<xacro:property name="plate_height" value="0.07"/>
    	<xacro:property name="standoff_x" value="0.12"/>
    	<xacro:property name="standoff_y" value="0.10"/>


	<!-- Define Base -->
	<link name="origin_link"/>
	<link name="base_link">

	<inertial>
		<mass value="2.12299505415"/>
		<inertia
			ixx="0.00494744483"
			ixy="0"
			ixz="0"
			iyy="0.00494744483"
			iyz="0"
			izz="0.00958868684"/>
		</inertial>
	<visual>
		<geometry>
			<mesh filename="package://omni_3wd/mesh/base.stl" scale="3.0 3.0 3.0"/>

		</geometry>
		<material name="base_material">
			<color rgba="1 1 1 1"/>
		</material>
	</visual>
	<collision>
		<geometry>
			<mesh filename="package://omni_3wd/mesh/base.stl" scale="3.0 3.0 3.0"/>
		</geometry>
	</collision>

	</link>
	<joint name="base_joint" type="fixed">
		<parent link="origin_link" />
		<child link="base_link" />
		<origin xyz="0 0 0.01905"/>
	</joint>



	<!-- Define pillar Joint and Link -->
	<xacro:macro name="mrobot_standoff_2in" params="parent number x_loc y_loc z_loc">
		<joint name="standoff_2in_${number}_joint" type="fixed">
		    <origin xyz="${x_loc} ${y_loc} ${z_loc}" rpy="0 0 0" />
		    <parent link="${parent}"/>
		    <child link="standoff_2in_${number}_link" />
		</joint>

		<link name="standoff_2in_${number}_link">
		    <inertial>
		        <mass value="0.001" />
		        <origin xyz="0 0 0" />
		        <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
		                 iyy="0.0001" iyz="0.0"
		                 izz="0.0001" />
		    </inertial>

		    <visual>
		        <origin xyz=" 0 0 0 " rpy="0 0 0" />
		        <geometry>
		            <box size="0.01 0.01 0.07" />
		        </geometry>
		        <material name="black">
		            <color rgba="0.16 0.17 0.15 0.9"/>
		        </material>
		    </visual>

		    <collision>
		        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
		        <geometry>
		            <box size="0.01 0.01 0.07" />
		        </geometry>
		    </collision>
		</link>
	</xacro:macro>


        <mrobot_standoff_2in parent="base_link" number="1" x_loc="-0.05" y_loc="-${standoff_y - 0.03}" z_loc="${plate_height/2}"/>
        <mrobot_standoff_2in parent="base_link" number="2" x_loc="-0.05" y_loc="${standoff_y - 0.03}" z_loc="${plate_height/2}"/>
        <mrobot_standoff_2in parent="base_link" number="3" x_loc="${standoff_x/2}" y_loc="-0.05" z_loc="${plate_height/2}"/>
        <mrobot_standoff_2in parent="base_link" number="4" x_loc="${standoff_x/2}" y_loc="0.05" z_loc="${plate_height/2}"/>


	<!-- Define plate Joint and Link -->
	<joint name="plate_1_joint" type="fixed">
            <origin xyz="0 0 ${plate_height}" rpy="0 0 0" />
            <parent link="base_link"/>
            <child link="plate_1_link" />
        </joint>

        <link name="plate_1_link">
            <inertial>
                <mass value="0.1" />
                <origin xyz="0 0 0" />
                <inertia ixx="0.01" ixy="0.0" ixz="0.0"
                         iyy="0.01" iyz="0.0" izz="0.01" />
            </inertial>

            <visual>
                <origin xyz=" 0 0 0 " rpy="0 0 0" />
                <geometry>
                    <cylinder length="${base_link_length}" radius="${base_link_radius}"/>
                </geometry>
                <material name="yellow"/>
            </visual>

            <collision>
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
                <geometry>
                    <cylinder length="${base_link_length}" radius="${base_link_radius}"/>
                </geometry>
            </collision>
        </link>



	<!-- Define Lidar -->
	<!-- <origin xyz> means -->
	<joint name="scan_joint" type="fixed">
    		<parent link="plate_1_link"/>
    		<child link="base_scan"/>
    		<origin xyz="-0.0 0 0.028" rpy="0 0 0"/>
  	</joint>

	<link name="base_scan">
	  <visual>
	    <origin xyz="0 0 0.0" rpy="0 0 0"/>
	    <geometry>
		<mesh filename="package://omni_3wd/meshes/sensors/lds.stl" scale="0.001 0.001 0.001"/>
	    </geometry>
	    <material name="dark"/>
	  </visual>

	  <collision>
	    <origin xyz="0.015 0 -0.0065" rpy="0 0 0"/>
	    <geometry>
		<cylinder length="0.0315" radius="0.055"/>
	    </geometry>
	  </collision>

	  <inertial>
	    <mass value="0.114" />
	    <origin xyz="0 0 0" />
	    <inertia ixx="0.001" ixy="0.0" ixz="0.0"
		     iyy="0.001" iyz="0.0"
		     izz="0.001" />
	  </inertial>
	</link>



	<!-- Assemble the Rims(wheel) -->
	<xacro:rim_macro
		name="left"
		color="0.3 0 0"
		xyz="-0.10392304845 0.06 0"
		rpy="1.570796326794896 0 1.047197551196597"/>
	<xacro:rim_macro
		name="back"
		color="0 0.3 0"
		xyz="0 -0.12 0"
		rpy="1.570796326794896 0 3.141592653589793"/>
	<xacro:rim_macro
		name="right"
		color="0 0 0.3"
		xyz="0.10392304845 0.06 0"
		rpy="1.570796326794896 0 -1.047197551196597"/>



	<!-- Define Colour and controller system plugin -->
	<gazebo reference="base_link">
    		<material>Gazebo/Orange</material>
  	</gazebo>

	<gazebo reference="rim_left_link">
    		<material>Gazebo/Red</material>
  	</gazebo>

	<gazebo reference="rim_back_link">
    		<material>Gazebo/Green</material>
  	</gazebo>

	<gazebo reference="rim_right_link">
    		<material>Gazebo/Blue</material>
  	</gazebo>
	<gazebo reference="standoff_2in_1_link">
    		<material>Gazebo/Orange</material>
  	</gazebo>
	<gazebo reference="standoff_2in_2_link">
    		<material>Gazebo/Orange</material>
  	</gazebo>
	<gazebo reference="standoff_2in_3_link">
    		<material>Gazebo/Orange</material>
  	</gazebo>
	<gazebo reference="standoff_2in_4_link">
    		<material>Gazebo/Orange</material>
  	</gazebo>
	<gazebo reference="plate_1_link">
    		<material>Gazebo/Orange</material>
  	</gazebo>


	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
		<robotNamespace>/open_base</robotNamespace>
		</plugin>
	</gazebo>



	<!-- Define Lidar Controller Plugin -->
	<gazebo reference="base_scan">
	  <material>Gazebo/FlatBlack</material>
	  <sensor type="ray" name="lds_lfcd_sensor">
	      <pose>0 0 0 0 0 0</pose>
	      <visualize>$(arg laser_visual)</visualize>
	      <update_rate>5</update_rate>
	      <ray>
		<scan>
		  <horizontal>
		    <samples>24</samples>
		    <resolution>1</resolution>
		    <min_angle>0.0</min_angle>
		    <max_angle>6.28319</max_angle>
		  </horizontal>
		</scan>
		<range>
		  <min>0.120</min>
		  <max>3.5</max>
		  <resolution>0.015</resolution>
		</range>
		<noise>
		  <type>gaussian</type>
		  <mean>0.0</mean>
		  <stddev>0.01</stddev>
		</noise>
	      </ray>
	      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
		<topicName>scan</topicName>
		<frameName>base_scan</frameName>
	      </plugin>
	  </sensor>
	</gazebo>
	
</robot>
